apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        versionCode computeVersionCode()
        versionName computeVersionName()
        testInstrumentationRunner "com.kogasoftware.android.DexMakerInstrumentationTestRunner"
    }
    signingConfigs {
        release {
            storeFile file(System.properties["ksc.android.sign.keystore"] ?: ".")
            storePassword System.properties["ksc.android.sign.storepass"]
            keyAlias System.properties["ksc.android.sign.alias"]
            keyPassword System.properties["ksc.android.sign.keypass"]
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE' // TODO: Write these on library project and use array.
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'src/main/libs', include: '*.jar')
    androidTestCompile fileTree(dir: 'src/androidTest/libs', include: '*.jar')
    compile project(':AndroidOpenJTalk')
    compile project(':play_apk_expansion')
}

def computeVersionName() {
    def versionCode = computeVersionCode()
    // Use SimpleDateFormat to set Locale
    def date = new java.text.SimpleDateFormat('yyyyMMddHHmmss', Locale.US).format(new Date())
    "Build-$versionCode ($date)"
}

def computeVersionCode() {
    (System.getenv("BUILD_NUMBER") ?: "0").toInteger()
}

project.gradle.taskGraph.whenReady {
    connectedAndroidTest {
        ignoreFailures = System.env.containsKey("BUILD_NUMBER");
    }
}
